package adas:camera-front@0.1.0;

interface camera-sensor {
    record config {
        width: u32,
        height: u32,
        fps: u32,
        format: string,
        auto-exposure: bool,
        auto-white-balance: bool,
    }

    record frame-info {
        timestamp: u64,
        frame-number: u64,
        exposure-ms: f32,
        gain: f32,
        temperature-celsius: f32,
    }

    enum status {
        inactive,
        initializing,
        active,
        error,
    }

    record stats {
        frames-processed: u64,
        frames-dropped: u64,
        average-fps: f32,
        cpu-percent: f32,
        memory-mb: u32,
        bandwidth-mbps: f32,
    }

    initialize: func(cfg: config) -> result<_, string>;
    start: func() -> result<_, string>;
    stop: func() -> result<_, string>;
    process-frame: func() -> result<frame-info, string>;
    get-status: func() -> status;
    get-stats: func() -> stats;
    reset-stats: func();
}

interface diagnostics {
    enum health {
        healthy,
        degraded,
        critical,
        offline,
    }

    record test-result {
        name: string,
        passed: bool,
        message: string,
        duration-ms: f32,
    }

    get-health: func() -> health;
    run-diagnostics: func() -> list<test-result>;
    get-report: func() -> string;
}

world camera-front {
    export camera-sensor;
    export diagnostics;
}